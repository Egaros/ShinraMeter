//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lang {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LP {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LP() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Lang.LP", typeof(LP).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Aggro.
        /// </summary>
        public static string Aggro {
            get {
                return ResourceManager.GetString("Aggro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Aggro time.
        /// </summary>
        public static string Aggro_Time {
            get {
                return ResourceManager.GetString("Aggro_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &quot;Time holding boss aggro&quot;.
        /// </summary>
        public static string Aggro_Time_Tooltip {
            get {
                return ResourceManager.GetString("Aggro_Time_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Aggro take count.
        /// </summary>
        public static string Aggro_Tooltip {
            get {
                return ResourceManager.GetString("Aggro_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Alliance color.
        /// </summary>
        public static string AllianceColor {
            get {
                return ResourceManager.GetString("AllianceColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  probably is already in use..
        /// </summary>
        public static string AlreadyInUse {
            get {
                return ResourceManager.GetString("AlreadyInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Do you want to update the application?.
        /// </summary>
        public static string App_Do_you_want_to_update {
            get {
                return ResourceManager.GetString("App_Do_you_want_to_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to contact update server, try again later, additional data available in error.log.
        /// </summary>
        public static string App_Unable_to_contact_update_server {
            get {
                return ResourceManager.GetString("App_Unable_to_contact_update_server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update Available.
        /// </summary>
        public static string App_Update_Available {
            get {
                return ResourceManager.GetString("App_Update_Available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à apply to your party.
        /// </summary>
        public static string ApplyToYourParty {
            get {
                return ResourceManager.GetString("ApplyToYourParty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Archer.
        /// </summary>
        public static string Archer {
            get {
                return ResourceManager.GetString("Archer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Area color.
        /// </summary>
        public static string AreaColor {
            get {
                return ResourceManager.GetString("AreaColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moongourd auth token.
        /// </summary>
        public static string AuthToken {
            get {
                return ResourceManager.GetString("AuthToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Avg.
        /// </summary>
        public static string Average {
            get {
                return ResourceManager.GetString("Average", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Avg crit.
        /// </summary>
        public static string AverageCrit {
            get {
                return ResourceManager.GetString("AverageCrit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Avg DPS.
        /// </summary>
        public static string AvgDPS {
            get {
                return ResourceManager.GetString("AvgDPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Avg white.
        /// </summary>
        public static string AvgWhite {
            get {
                return ResourceManager.GetString("AvgWhite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Back.
        /// </summary>
        public static string Back {
            get {
                return ResourceManager.GetString("Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Berserker.
        /// </summary>
        public static string Berserker {
            get {
                return ResourceManager.GetString("Berserker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Boss.
        /// </summary>
        public static string Boss {
            get {
                return ResourceManager.GetString("Boss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Boss HP.
        /// </summary>
        public static string BossHP {
            get {
                return ResourceManager.GetString("BossHP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Brawler.
        /// </summary>
        public static string Brawler {
            get {
                return ResourceManager.GetString("Brawler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Buff.
        /// </summary>
        public static string Buff {
            get {
                return ResourceManager.GetString("Buff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Chained.
        /// </summary>
        public static string Chained {
            get {
                return ResourceManager.GetString("Chained", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Chat.
        /// </summary>
        public static string Chat {
            get {
                return ResourceManager.GetString("Chat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Class.
        /// </summary>
        public static string Class {
            get {
                return ResourceManager.GetString("Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close.
        /// </summary>
        public static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à s CMA DPS.
        /// </summary>
        public static string CMADPS {
            get {
                return ResourceManager.GetString("CMADPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Combat ready check.
        /// </summary>
        public static string CombatReadyCheck {
            get {
                return ResourceManager.GetString("CombatReadyCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Common.
        /// </summary>
        public static string Common {
            get {
                return ResourceManager.GetString("Common", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Contact try.
        /// </summary>
        public static string ContactTry {
            get {
                return ResourceManager.GetString("ContactTry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Copy &quot;/inspect Name&quot; on party apply request.
        /// </summary>
        public static string CopyInspect {
            get {
                return ResourceManager.GetString("CopyInspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à % Crit Dmg.
        /// </summary>
        public static string CritDamagePercent {
            get {
                return ResourceManager.GetString("CritDamagePercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Critical.
        /// </summary>
        public static string Critical {
            get {
                return ResourceManager.GetString("Critical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à % Crit.
        /// </summary>
        public static string CritPercent {
            get {
                return ResourceManager.GetString("CritPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Crits.
        /// </summary>
        public static string Crits {
            get {
                return ResourceManager.GetString("Crits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Damage.
        /// </summary>
        public static string Damage {
            get {
                return ResourceManager.GetString("Damage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Damage done.
        /// </summary>
        public static string Damage_done {
            get {
                return ResourceManager.GetString("Damage_done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à % Dmg.
        /// </summary>
        public static string DamagePercent {
            get {
                return ResourceManager.GetString("DamagePercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dmg taken.
        /// </summary>
        public static string DamgeTaken {
            get {
                return ResourceManager.GetString("DamgeTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Death time.
        /// </summary>
        public static string Death_Time {
            get {
                return ResourceManager.GetString("Death_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &quot;Time spent on the floor&quot;.
        /// </summary>
        public static string Death_Time_Tooltip {
            get {
                return ResourceManager.GetString("Death_Time_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Deaths.
        /// </summary>
        public static string Deaths {
            get {
                return ResourceManager.GetString("Deaths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Deaths count.
        /// </summary>
        public static string Deaths_Tooltip {
            get {
                return ResourceManager.GetString("Deaths_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delay to wait when pasting.
        /// </summary>
        public static string DelayToWaitPasting {
            get {
                return ResourceManager.GetString("DelayToWaitPasting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disable party events.
        /// </summary>
        public static string DisablePartyEvents {
            get {
                return ResourceManager.GetString("DisablePartyEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DOT.
        /// </summary>
        public static string Dot {
            get {
                return ResourceManager.GetString("Dot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dps.
        /// </summary>
        public static string Dps {
            get {
                return ResourceManager.GetString("Dps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Eff Time.
        /// </summary>
        public static string EffectTime {
            get {
                return ResourceManager.GetString("EffectTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Emotes color.
        /// </summary>
        public static string EmotesColor {
            get {
                return ResourceManager.GetString("EmotesColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable chat and notification functions.
        /// </summary>
        public static string EnableChat {
            get {
                return ResourceManager.GetString("EnableChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enrage.
        /// </summary>
        public static string Enrage {
            get {
                return ResourceManager.GetString("Enrage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- Mystic contagion --&gt;
        ///	&lt;abnormality active=&quot;true&quot; ingame=&quot;true&quot; trigger=&quot;Added&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;701700&lt;/abnormality&gt;
        ///			&lt;abnormality&gt;701701&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : on&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;110&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_archer {
            get {
                return ResourceManager.GetString("events_archer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- Mystic contagion --&gt;
        ///	&lt;abnormality active=&quot;true&quot; ingame=&quot;true&quot; trigger=&quot;Added&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;701700&lt;/abnormality&gt;
        ///			&lt;abnormality&gt;701701&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : on&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;110&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_berserker {
            get {
                return ResourceManager.GetString("events_berserker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- Mystic contagion --&gt;
        ///	&lt;abnormality active=&quot;true&quot; ingame=&quot;true&quot; trigger=&quot;Added&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;701700&lt;/abnormality&gt;
        ///			&lt;abnormality&gt;701701&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : on&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;110&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_brawler {
            get {
                return ResourceManager.GetString("events_brawler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///
        ///	&lt;!-- Notification when something happen &amp; you are not on the Tera windows --&gt;
        ///	&lt;common_afk&gt;
        ///		&lt;actions&gt;
        ///				&lt;notify&gt;
        ///					&lt;balloon title_text=&quot;{afk_title}&quot; body_text=&quot;{afk_body}&quot; display_time=&quot;3000&quot; /&gt;
        ///					&lt;beeps&gt;
        ///						&lt;beep frequency=&quot;440&quot; duration=&quot;500&quot;/&gt;
        ///					&lt;/beeps&gt;
        ///				&lt;/notify&gt;
        ///			&lt;/actions&gt;
        ///	&lt;/common_afk&gt;
        ///	
        ///	&lt;!-- The boss became enraged --&gt;
        ///	&lt;abnormality ingame=&quot;true&quot; trigger=&quot;Added&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_common {
            get {
                return ResourceManager.GetString("events_common", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- Mystic contagion --&gt;
        ///	&lt;abnormality active=&quot;true&quot; ingame=&quot;true&quot; trigger=&quot;Added&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;701700&lt;/abnormality&gt;
        ///			&lt;abnormality&gt;701701&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : on&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;110&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_gunner {
            get {
                return ResourceManager.GetString("events_gunner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///
        ///	&lt;!-- The boss is not enraged anymore  --&gt;
        ///	&lt;abnormality ingame=&quot;true&quot; trigger=&quot;Removed&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;8888888&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : off&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;185&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions&gt;
        ///	&lt;/abnormality&gt;
        ///
        ///	&lt;!-- My [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_lancer {
            get {
                return ResourceManager.GetString("events_lancer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- Adrenaline Rush --&gt;
        ///	&lt;abnormality active=&quot;true&quot; ingame=&quot;true&quot; trigger=&quot;Added&quot; target=&quot;Self&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;200701&lt;/abnormality&gt;
        ///			&lt;abnormality&gt;200700&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : on&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;110&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions&gt; [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_mystic {
            get {
                return ResourceManager.GetString("events_mystic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- Focus --&gt;
        ///	&lt;abnormality active=&quot;true&quot; rewarn_timeout_seconds=&quot;3&quot; ingame=&quot;true&quot; remaining_seconds_before_trigger=&quot;0&quot; trigger=&quot;MissingDuringFight&quot; target=&quot;Self&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;10154030&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name}&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;220&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        /// [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_ninja {
            get {
                return ResourceManager.GetString("events_ninja", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///
        ///	&lt;!-- Blessing of Shakan --&gt;
        ///	&lt;abnormality active=&quot;false&quot; ingame=&quot;true&quot; rewarn_timeout_seconds=&quot;10&quot; remaining_seconds_before_trigger=&quot;40&quot; trigger=&quot;MissingDuringFight&quot; target=&quot;Party&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;805102&lt;/abnormality&gt;
        ///			&lt;abnormality&gt;805101&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name}&quot; body_text=&quot;{player_name} {time_left}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_priest {
            get {
                return ResourceManager.GetString("events_priest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- Mystic contagion --&gt;
        ///	&lt;abnormality active=&quot;true&quot; ingame=&quot;true&quot; trigger=&quot;Added&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;701700&lt;/abnormality&gt;
        ///			&lt;abnormality&gt;701701&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : on&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;110&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_reaper {
            get {
                return ResourceManager.GetString("events_reaper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- Mystic contagion --&gt;
        ///	&lt;abnormality active=&quot;true&quot; ingame=&quot;true&quot; trigger=&quot;Added&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;701700&lt;/abnormality&gt;
        ///			&lt;abnormality&gt;701701&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : on&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;110&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_slayer {
            get {
                return ResourceManager.GetString("events_slayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- Mystic contagion --&gt;
        ///	&lt;abnormality active=&quot;true&quot; ingame=&quot;true&quot; trigger=&quot;Added&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;701700&lt;/abnormality&gt;
        ///			&lt;abnormality&gt;701701&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : on&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;110&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_sorcerer {
            get {
                return ResourceManager.GetString("events_sorcerer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- Mystic contagion --&gt;
        ///	&lt;abnormality active=&quot;true&quot; ingame=&quot;true&quot; trigger=&quot;Added&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;701700&lt;/abnormality&gt;
        ///			&lt;abnormality&gt;701701&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : on&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;110&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_valkyrie {
            get {
                return ResourceManager.GetString("events_valkyrie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;events&gt;
        ///	&lt;!-- The boss is not enraged anymore  --&gt;
        ///	&lt;abnormality ingame=&quot;true&quot; trigger=&quot;Removed&quot; target=&quot;Boss&quot;&gt;
        ///		&lt;abnormalities&gt;
        ///			&lt;abnormality&gt;8888888&lt;/abnormality&gt;
        ///		&lt;/abnormalities&gt;
        ///		&lt;actions&gt;
        ///			&lt;notify&gt;
        ///				&lt;balloon title_text=&quot;{abnormality_name} : off&quot; body_text=&quot;{abnormality_name}&quot; display_time=&quot;3000&quot; /&gt;
        ///				&lt;beeps&gt;
        ///					&lt;beep frequency=&quot;185&quot; duration=&quot;500&quot;/&gt;
        ///				&lt;/beeps&gt;
        ///			&lt;/notify&gt;
        ///		&lt;/actions&gt;
        ///	&lt;/abnormality&gt;
        ///	
        ///	&lt;!-- End [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string events_warrior {
            get {
                return ResourceManager.GetString("events_warrior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fight.
        /// </summary>
        public static string Fight {
            get {
                return ResourceManager.GetString("Fight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fight Duration.
        /// </summary>
        public static string Fight_Duration {
            get {
                return ResourceManager.GetString("Fight_Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à % Fight.
        /// </summary>
        public static string FightPercent {
            get {
                return ResourceManager.GetString("FightPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Format paste string.
        /// </summary>
        public static string FormatPasteString {
            get {
                return ResourceManager.GetString("FormatPasteString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Front.
        /// </summary>
        public static string Front {
            get {
                return ResourceManager.GetString("Front", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à General color.
        /// </summary>
        public static string GeneralColor {
            get {
                return ResourceManager.GetString("GeneralColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Group color.
        /// </summary>
        public static string GroupColor {
            get {
                return ResourceManager.GetString("GroupColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Guild color.
        /// </summary>
        public static string GuildColor {
            get {
                return ResourceManager.GetString("GuildColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gunner.
        /// </summary>
        public static string Gunner {
            get {
                return ResourceManager.GetString("Gunner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Heal.
        /// </summary>
        public static string Heal {
            get {
                return ResourceManager.GetString("Heal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Heal Crit %.
        /// </summary>
        public static string HealCritPercent {
            get {
                return ResourceManager.GetString("HealCritPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hits.
        /// </summary>
        public static string Hits {
            get {
                return ResourceManager.GetString("Hits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hits taken.
        /// </summary>
        public static string HitsTaken {
            get {
                return ResourceManager.GetString("HitsTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HOT.
        /// </summary>
        public static string Hot {
            get {
                return ResourceManager.GetString("Hot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Idle reset timeout in sec (0=disable).
        /// </summary>
        public static string IdleResetTimeout {
            get {
                return ResourceManager.GetString("IdleResetTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Individual dps.
        /// </summary>
        public static string Individual_dps {
            get {
                return ResourceManager.GetString("Individual_dps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JoyOfPartying 100%.
        /// </summary>
        public static string JoyOfPartying {
            get {
                return ResourceManager.GetString("JoyOfPartying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lancer.
        /// </summary>
        public static string Lancer {
            get {
                return ResourceManager.GetString("Lancer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lvl.
        /// </summary>
        public static string Lvl {
            get {
                return ResourceManager.GetString("Lvl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Boss + Adds.
        /// </summary>
        public static string MainWindow_Boss_Adds {
            get {
                return ResourceManager.GetString("MainWindow_Boss_Adds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close Shinra Meter V.
        /// </summary>
        public static string MainWindow_Close_Shinra_Meter_V {
            get {
                return ResourceManager.GetString("MainWindow_Close_Shinra_Meter_V", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Do you want to close the application?.
        /// </summary>
        public static string MainWindow_Do_you_want_to_close_the_application {
            get {
                return ResourceManager.GetString("MainWindow_Do_you_want_to_close_the_application", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An fatal error has be found, please see the error.log file for more information..
        /// </summary>
        public static string MainWindow_Fatal_error {
            get {
                return ResourceManager.GetString("MainWindow_Fatal_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Only boss.
        /// </summary>
        public static string MainWindow_Only_boss {
            get {
                return ResourceManager.GetString("MainWindow_Only_boss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mana.
        /// </summary>
        public static string Mana {
            get {
                return ResourceManager.GetString("Mana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Max crit.
        /// </summary>
        public static string MaxCrit {
            get {
                return ResourceManager.GetString("MaxCrit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Max white.
        /// </summary>
        public static string MaxWhite {
            get {
                return ResourceManager.GetString("MaxWhite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Min Crit.
        /// </summary>
        public static string MinCrit {
            get {
                return ResourceManager.GetString("MinCrit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MOT.
        /// </summary>
        public static string Mot {
            get {
                return ResourceManager.GetString("Mot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mute sound.
        /// </summary>
        public static string MuteSound {
            get {
                return ResourceManager.GetString("MuteSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mystic.
        /// </summary>
        public static string Mystic {
            get {
                return ResourceManager.GetString("Mystic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ninja.
        /// </summary>
        public static string Ninja {
            get {
                return ResourceManager.GetString("Ninja", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No active quest at the moment.
        /// </summary>
        public static string No_active_quest {
            get {
                return ResourceManager.GetString("No_active_quest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CrystalBind missing.
        /// </summary>
        public static string NoCrystalBind {
            get {
                return ResourceManager.GetString("NoCrystalBind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notify about CrystalBinds..
        /// </summary>
        public static string NotifyCB {
            get {
                return ResourceManager.GetString("NotifyCB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Number of players displayed.
        /// </summary>
        public static string NumberPlayersDisplayed {
            get {
                return ResourceManager.GetString("NumberPlayersDisplayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Offered price.
        /// </summary>
        public static string OfferedPrice {
            get {
                return ResourceManager.GetString("OfferedPrice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open chat box.
        /// </summary>
        public static string OpenChatBox {
            get {
                return ResourceManager.GetString("OpenChatBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Party invite.
        /// </summary>
        public static string PartyInvite {
            get {
                return ResourceManager.GetString("PartyInvite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Party matching success.
        /// </summary>
        public static string PartyMatchingSuccess {
            get {
                return ResourceManager.GetString("PartyMatchingSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à /s.
        /// </summary>
        public static string PerSecond {
            get {
                return ResourceManager.GetString("PerSecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pet.
        /// </summary>
        public static string Pet {
            get {
                return ResourceManager.GetString("Pet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Popup stay active for X ms.
        /// </summary>
        public static string PopupStayActiveForXms {
            get {
                return ResourceManager.GetString("PopupStayActiveForXms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Priest.
        /// </summary>
        public static string Priest {
            get {
                return ResourceManager.GetString("Priest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Private channel color.
        /// </summary>
        public static string PrivateChannelColor {
            get {
                return ResourceManager.GetString("PrivateChannelColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export to private dps servers.
        /// </summary>
        public static string PrivateServerExport {
            get {
                return ResourceManager.GetString("PrivateServerExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Private server URL.
        /// </summary>
        public static string PrivateServerURL {
            get {
                return ResourceManager.GetString("PrivateServerURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Quests done status: .
        /// </summary>
        public static string Quests_status {
            get {
                return ResourceManager.GetString("Quests_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Raid color.
        /// </summary>
        public static string RaidColor {
            get {
                return ResourceManager.GetString("RaidColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reaper.
        /// </summary>
        public static string Reaper {
            get {
                return ResourceManager.GetString("Reaper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Couldn’t register the hot key..
        /// </summary>
        public static string RegisterHotKeyError {
            get {
                return ResourceManager.GetString("RegisterHotKeyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Remove Tera alt+enter hotkey.
        /// </summary>
        public static string RemoveTeraAltEnterHotkey {
            get {
                return ResourceManager.GetString("RemoveTeraAltEnterHotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reset.
        /// </summary>
        public static string Reset {
            get {
                return ResourceManager.GetString("Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Say color.
        /// </summary>
        public static string SayColor {
            get {
                return ResourceManager.GetString("SayColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à s.
        /// </summary>
        public static string Seconds {
            get {
                return ResourceManager.GetString("Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Seller price.
        /// </summary>
        public static string SellerPrice {
            get {
                return ResourceManager.GetString("SellerPrice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ###########################################################
        ///# Add additional servers in this file (needed only for
        ///# VPN/Proxy that is not supported out-of-box)
        ///#
        ///# Format must follow the format IP Region ServerName
        ///#
        ///# Example:
        ///# 111.22.33.44 NA VPN Server 1
        ///#
        ///# Current possible regions: EU, NA, RU, KR, TW, JP
        ///#
        ///# Lines starting with &apos;#&apos; are ignored
        ///# Place servers below the next line
        ///###########################################################.
        /// </summary>
        public static string ServerOverrides {
            get {
                return ResourceManager.GetString("ServerOverrides", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show common_afk events ingame.
        /// </summary>
        public static string ShowAfkEventsIngame {
            get {
                return ResourceManager.GetString("ShowAfkEventsIngame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show Boss HP Bar.
        /// </summary>
        public static string ShowBossGage {
            get {
                return ResourceManager.GetString("ShowBossGage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show self on top position in UI.
        /// </summary>
        public static string ShowSelfOnTop {
            get {
                return ResourceManager.GetString("ShowSelfOnTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Side.
        /// </summary>
        public static string Side {
            get {
                return ResourceManager.GetString("Side", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SkillDealt.
        /// </summary>
        public static string SkillDealt {
            get {
                return ResourceManager.GetString("SkillDealt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Skill name.
        /// </summary>
        public static string SkillName {
            get {
                return ResourceManager.GetString("SkillName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SkillReceived.
        /// </summary>
        public static string SkillReceived {
            get {
                return ResourceManager.GetString("SkillReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Slayer.
        /// </summary>
        public static string Slayer {
            get {
                return ResourceManager.GetString("Slayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Slaying.
        /// </summary>
        public static string Slaying {
            get {
                return ResourceManager.GetString("Slaying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &apos;Slaying&apos; crystal is working (if equipped) when player in this state..
        /// </summary>
        public static string SlayingTooltip {
            get {
                return ResourceManager.GetString("SlayingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sorcerer.
        /// </summary>
        public static string Sorcerer {
            get {
                return ResourceManager.GetString("Sorcerer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Switch to another sound system.
        /// </summary>
        public static string SoundConsoleBeepFallback {
            get {
                return ResourceManager.GetString("SoundConsoleBeepFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sound filename.
        /// </summary>
        public static string SoundFilename {
            get {
                return ResourceManager.GetString("SoundFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sound stay active for X ms.
        /// </summary>
        public static string SoundStayActiveForXms {
            get {
                return ResourceManager.GetString("SoundStayActiveForXms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sound volume.
        /// </summary>
        public static string SoundVolume {
            get {
                return ResourceManager.GetString("SoundVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start.
        /// </summary>
        public static string Start {
            get {
                return ResourceManager.GetString("Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Action.
        /// </summary>
        public static string SystemTray_Action {
            get {
                return ResourceManager.GetString("SystemTray_Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Autoexport to Excel.
        /// </summary>
        public static string SystemTray_Autoexport_to_Excel {
            get {
                return ResourceManager.GetString("SystemTray_Autoexport_to_Excel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à before crash.
        /// </summary>
        public static string SystemTray_before_crash {
            get {
                return ResourceManager.GetString("SystemTray_before_crash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Click throu.
        /// </summary>
        public static string SystemTray_Click_throu {
            get {
                return ResourceManager.GetString("SystemTray_Click_throu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Config.
        /// </summary>
        public static string SystemTray_Config {
            get {
                return ResourceManager.GetString("SystemTray_Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Count only bosses.
        /// </summary>
        public static string SystemTray_Count_only_bosses {
            get {
                return ResourceManager.GetString("SystemTray_Count_only_bosses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Count only party members.
        /// </summary>
        public static string SystemTray_Count_only_party_members {
            get {
                return ResourceManager.GetString("SystemTray_Count_only_party_members", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Detect bosses by HP bar (ignore db).
        /// </summary>
        public static string SystemTray_Detect_bosses_by_HP_bar {
            get {
                return ResourceManager.GetString("SystemTray_Detect_bosses_by_HP_bar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Discord.
        /// </summary>
        public static string SystemTray_Discord {
            get {
                return ResourceManager.GetString("SystemTray_Discord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Excel: calc moving average DPS for X seconds.
        /// </summary>
        public static string SystemTray_ExcelCMADPSSeconds {
            get {
                return ResourceManager.GetString("SystemTray_ExcelCMADPSSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export current to Excel.
        /// </summary>
        public static string SystemTray_Export_current_to_Excel {
            get {
                return ResourceManager.GetString("SystemTray_Export_current_to_Excel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export current to site.
        /// </summary>
        public static string SystemTray_Export_current_to_Site {
            get {
                return ResourceManager.GetString("SystemTray_Export_current_to_Site", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invisible when no stats.
        /// </summary>
        public static string SystemTray_Invisible_when_no_stats {
            get {
                return ResourceManager.GetString("SystemTray_Invisible_when_no_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Links.
        /// </summary>
        public static string SystemTray_Links {
            get {
                return ResourceManager.GetString("SystemTray_Links", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No server.
        /// </summary>
        public static string SystemTray_No_server {
            get {
                return ResourceManager.GetString("SystemTray_No_server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Packets waiting to be processed.
        /// </summary>
        public static string SystemTray_Packet_waiting {
            get {
                return ResourceManager.GetString("SystemTray_Packet_waiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Patch note.
        /// </summary>
        public static string SystemTray_Patch_note {
            get {
                return ResourceManager.GetString("SystemTray_Patch_note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Performance information.
        /// </summary>
        public static string SystemTray_Performance_information {
            get {
                return ResourceManager.GetString("SystemTray_Performance_information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Report issue.
        /// </summary>
        public static string SystemTray_Report_issue {
            get {
                return ResourceManager.GetString("SystemTray_Report_issue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show always.
        /// </summary>
        public static string SystemTray_Show_always {
            get {
                return ResourceManager.GetString("SystemTray_Show_always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Site export.
        /// </summary>
        public static string SystemTray_Site_export {
            get {
                return ResourceManager.GetString("SystemTray_Site_export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stay topmost.
        /// </summary>
        public static string SystemTray_Stay_topmost {
            get {
                return ResourceManager.GetString("SystemTray_Stay_topmost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wiki.
        /// </summary>
        public static string SystemTray_Wiki {
            get {
                return ResourceManager.GetString("SystemTray_Wiki", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Api error or timeout..
        /// </summary>
        public static string TeraDpsIoApiError {
            get {
                return ResourceManager.GetString("TeraDpsIoApiError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Test sound.
        /// </summary>
        public static string TestSound {
            get {
                return ResourceManager.GetString("TestSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Time.
        /// </summary>
        public static string Time {
            get {
                return ResourceManager.GetString("Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à TOTAL.
        /// </summary>
        public static string TotalEncounter {
            get {
                return ResourceManager.GetString("TotalEncounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trading.
        /// </summary>
        public static string Trading {
            get {
                return ResourceManager.GetString("Trading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trading color.
        /// </summary>
        public static string TradingColor {
            get {
                return ResourceManager.GetString("TradingColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to get key from string.
        /// </summary>
        public static string Unable_to_get_key_from_string {
            get {
                return ResourceManager.GetString("Unable_to_get_key_from_string", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upload glyph build to moongourd.com.
        /// </summary>
        public static string UploadGlyphBuild {
            get {
                return ResourceManager.GetString("UploadGlyphBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Valkyrie.
        /// </summary>
        public static string Valkyrie {
            get {
                return ResourceManager.GetString("Valkyrie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vanguard credits are close to cap:.
        /// </summary>
        public static string VanguardCredits {
            get {
                return ResourceManager.GetString("VanguardCredits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Warrior.
        /// </summary>
        public static string Warrior {
            get {
                return ResourceManager.GetString("Warrior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Whisper.
        /// </summary>
        public static string Whisper {
            get {
                return ResourceManager.GetString("Whisper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Whisper color.
        /// </summary>
        public static string WhisperColor {
            get {
                return ResourceManager.GetString("WhisperColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à White.
        /// </summary>
        public static string White {
            get {
                return ResourceManager.GetString("White", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your computer is too slow to use this DPS meter. Can&apos;t analyse all those packet in decent amount of time. Shutting down now..
        /// </summary>
        public static string Your_computer_is_too_slow {
            get {
                return ResourceManager.GetString("Your_computer_is_too_slow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your hotkeys.xml file is invalid..
        /// </summary>
        public static string Your_hotkeys_xml_file_is_invalid {
            get {
                return ResourceManager.GetString("Your_hotkeys_xml_file_is_invalid", resourceCulture);
            }
        }
    }
}
